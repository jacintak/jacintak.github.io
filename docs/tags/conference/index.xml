<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>conference | Jacinta&#39;s Website</title>
    <link>https://jacintak.github.io/tags/conference/</link>
      <atom:link href="https://jacintak.github.io/tags/conference/index.xml" rel="self" type="application/rss+xml" />
    <description>conference</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 26 Aug 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jacintak.github.io/img/icon-512.png</url>
      <title>conference</title>
      <link>https://jacintak.github.io/tags/conference/</link>
    </image>
    
    <item>
      <title>ICE 2024</title>
      <link>https://jacintak.github.io/talk/ICE2024/</link>
      <pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/talk/ICE2024/</guid>
      <description>&lt;hr&gt;
&lt;h1 id=&#34;symposium-description&#34;&gt;Symposium description&lt;/h1&gt;
&lt;p&gt;I am organising a symposium on using physiology in insect mass-rearing practice at the International Congress of Entomology in Kyoto, Japan in 2024.&lt;/p&gt;
&lt;p&gt;Rearing insects en masse is crucial for numerous industries. Mass reared insects are used for releases related to pollination, disease control, conservation or pest management, and for food and feed production and waste processing. Physiological performance underpins the quantities and qualities of insects necessary for success in mass rearing programs. In turn, performance gains and deficits depend on biotic and abiotic factors like diet, temperature, social environments, and disease (e.g. viruses). We will connect experts working on various modulators of performance across as many applications as possible and showcase how insect physiology can be leveraged to optimise mass rearing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BES 2022</title>
      <link>https://jacintak.github.io/talk/BES2022/</link>
      <pubDate>Mon, 19 Dec 2022 17:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/talk/BES2022/</guid>
      <description>&lt;p&gt;Thermal tolerances, such as critical temperatures, are important indices for understanding an organism’s vulnerability to changing environmental temperature. Differences in thermal tolerance over ontogeny may generate a ‘thermal bottleneck’ that sets the climate vulnerability for organisms with complex life cycles. However, a species’ microhabitat preference and methodological differences among studies can generate confounding variation in thermal tolerance that may mask trends in large-scale comparative studies and may hinder our ability to assess climate change vulnerability within and among species. Here, we evaluated two approaches to resolving ontogenetic and environmental drivers of thermal tolerance and methodological variation: mathematical standardisation of thermal tolerance and classifying microhabitat preferences. Using phylogenetically informed, multi-level models with a global dataset of upper critical temperatures from 438 Anuran species, we found ontogenetic trends in thermal tolerance were similar across microhabitat preferences and standardising critical temperatures against common methodological variation had little impact on our conclusions. Our results suggested thermal bottlenecks are not strongly present in Anurans but instead, implied strong developmental or genetic conservatism of thermal tolerance within families and ecotypes. We discussed considerations for resolving confounding variation to interpret thermal tolerance at a macrophysiological scale.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>December update</title>
      <link>https://jacintak.github.io/post/2021-12-01-december-update/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/post/2021-12-01-december-update/</guid>
      <description>
&lt;script src=&#34;https://jacintak.github.io/post/2021-12-01-december-update/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;end-of-the-year&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;End of the year!&lt;/h1&gt;
&lt;p&gt;The work-from-home go-in-to-work and back again switching meant I didn’t have time to write the post I originally intended. But this month I’ve made some updates around the site plus some general end of year housekeeping here on GitHub.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;research&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Research&lt;/h1&gt;
&lt;p&gt;It’s been a busy year including many firsts or personal records. I “attended” three conferences, wrote my first independent collaborative paper, submitted many papers, got many rejections, applied for jobs and reviewed many papers. I was pleasantly surprised to see my research mentioned in people’s conference presentations. Thank you for reading!&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;teaching&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Teaching&lt;/h1&gt;
&lt;p&gt;I’ve updated the teaching materials on the site.&lt;/p&gt;
&lt;p&gt;Over the course of the year, I’ve turned various tutorials I ran for NERD club into blog posts on this site and collated them on a &lt;a href=&#34;https://jacintak.github.io/project/NERD-club&#34;&gt;Project page&lt;/a&gt; with their original presentations. I’m glad that some people have found them useful.&lt;/p&gt;
&lt;p&gt;At the moment I’m not sure what I want to do with the &lt;a href=&#34;https://jacintak.github.io/teaching/GLM/lectures/index.html&#34;&gt;GLM course notes&lt;/a&gt; on the site. With an update, they may be useful to some, but I revamped my lectures this year, so these notes don’t follow the lectures. I’m still not sure what the best balance of teaching stats is. Too many additional resources seem overwhelming to students especially with remote learning so this year I went for the less is more approach. At the very least, creating the resource was a good opportunity to try out &lt;code&gt;bookdown&lt;/code&gt; and figure out how to integrate it within a &lt;code&gt;blogdown&lt;/code&gt; site.&lt;/p&gt;
&lt;p&gt;I’ve updated an &lt;a href=&#34;https://jacintak.github.io/teaching/introR/index.html&#34;&gt;Introduction to R&lt;/a&gt; with how to change the default library address because I noticed that the user library folder created in Documents was syncing to OneDrive for many students using Windows 10. This is a feature of using a Microsoft account but it means there are then issues between R accessing the user library and OneDrive syncing the folder. This becomes a prominent issue if you are running a session that depends on many packages.&lt;/p&gt;
&lt;p&gt;This feature is frustrating because I don’t expect students to need to delve into Control Panel and change their computer settings. I don’t expect them to &lt;em&gt;know&lt;/em&gt; how to do it and it only adds to their stress when they get package related errors during class. Does the younger generation even know what the Control Panel is and how to modify it? It defeats the point of Windows becoming more user friendly. In terms of user friendliness, it would be great if changing the default package folder was an option through the RStudio GUI.&lt;/p&gt;
&lt;p&gt;These issues came about because I wanted to try delivering practicals through &lt;code&gt;learnr&lt;/code&gt;. On paper, interactive tutorials are great and they are well integrated within the RStudio environment through the Tutorial pane. In practice, it complicates the process for the students because now they have to install all the dependencies - and there are a lot of them! Which is an additional learning curve of computer housekeeping. This is also not the kind of debugging I expect the demonstrators to know. The remote delivery makes troubleshooting difficult.&lt;/p&gt;
&lt;p&gt;Though &lt;code&gt;learnr&lt;/code&gt; has been around for a few years, it’s still in active development and there are some issues or features that cause headaches during class. Unfortunately, debugging these error messages is not straightforward and the general fix is to reinstall the package again. Two issues I’ve come across that are known, open issues on GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trailing garbage error. Some students cannot open a tutorial a second time, or even a first time. The error is inconsistent across students which makes it hard to infer why it’s happening.&lt;/li&gt;
&lt;li&gt;Skipping coding exercises by pressing run code (even with no input). This defeats the point of not allowing skipping.
&lt;ul&gt;
&lt;li&gt;There is a great temptation among students to rush through and skip exercises to get to the “important bits” (it’s all important) or to jump to any in-class assessment and work in reverse (i.e. reading the assessment question then skim reading the relevant section without working through the theory first). Maybe this is a consequence of remote teaching and open book assessment that this cohort is now used to. Forcing students to slow down and engage with the material in order is one solution.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ve made the &lt;code&gt;learnr&lt;/code&gt; practicals available on GitHub and given it a &lt;a href=&#34;https://jacintak.github.io/project/statistical-modelling&#34;&gt;project page&lt;/a&gt;. It’s a set of practicals about learning statistical modelling through the context of functional responses (predator-prey interactions). Students collect data in the first practical and analyse the data in the second. I made a Type II functional response model in Scratch for remote students to participate in data collection.&lt;/p&gt;
&lt;p&gt;I moved the original &lt;code&gt;learnr&lt;/code&gt; tutorials about R to their own GitHub repository and &lt;a href=&#34;https://jacintak.github.io/project/biostats-tutorials&#34;&gt;project page&lt;/a&gt;. I’m not sure what to do with this too. My original intention was to provide it as an additional resource to students. Currently, I have revamped the tutorials based on material I’ve presented to NERD club.&lt;/p&gt;
&lt;p&gt;Overall, I’m satisfied with how &lt;code&gt;learnr&lt;/code&gt; worked in a large classroom. The loading error is annoying but mostly because of the remote delivery and it only affects a minor proportion of students.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Here’s to hoping for more adventures in the new year.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Society for Experimental Biology Annual Meeting</title>
      <link>https://jacintak.github.io/talk/SEB2021/</link>
      <pubDate>Thu, 08 Jul 2021 14:05:00 +0000</pubDate>
      <guid>https://jacintak.github.io/talk/SEB2021/</guid>
      <description>&lt;p&gt;Insect life cycles are adapted to a seasonal climate by expressing alternative voltinism phenotypes—the number of generations in a year. The problem is to understand how this phenotypic variation along latitudinal gradients is generated through the interactions between environmental factors, like temperature, and the traits of organisms, like development rate and dormancy. However, our current understanding is limited by how thermal responses are characterised, competing theories of thermal adaptation and an incomplete understanding of complex life cycles. Using the widely distributed grasshopper genus &lt;em&gt;Warramaba&lt;/em&gt; as a model, we aimed to reconcile theories of thermal adaptation and tested their respective predictions. We hypothesised that the egg stage was a critical life stage for generating latitudinal patterns of voltinism in &lt;em&gt;Warramaba&lt;/em&gt;. We described patterns of voltinism and thermal response of egg development rate within and among species of &lt;em&gt;Warramaba&lt;/em&gt; along a latitudinal temperature gradient. We found a latitudinal pattern of univoltinism at high latitudes and multivoltinism at low latitudes that corresponded with remarkably strong divergence in egg dormancy patterns and thermal responses of egg development. We argue that the switch in voltinism along the latitudinal gradient was generated by the combined predictions of the evolution of voltinism and of thermal adaptation. We conclude that analyses of latitudinal patterns in thermal responses and corresponding life histories need to consider the evolution of thermal response curves within the context of seasonal temperature cycles rather than based solely on optimality and trade-offs in performance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BES Macro 2021</title>
      <link>https://jacintak.github.io/talk/BESMacro2021/</link>
      <pubDate>Wed, 07 Jul 2021 11:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/talk/BESMacro2021/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Transparent graphing for dark backgrounds</title>
      <link>https://jacintak.github.io/post/2021-02-01-transparent-graphing-for-dark-backgrounds/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/post/2021-02-01-transparent-graphing-for-dark-backgrounds/</guid>
      <description>
&lt;script src=&#34;https://jacintak.github.io/post/2021-02-01-transparent-graphing-for-dark-backgrounds/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I’m not usually a dark background person but I’m open to the dark side. I wanted to make a solid coloured graph with a transparent background that would show up nicely but &lt;code&gt;ggplot2&lt;/code&gt; doesn’t have a set theme for that. A clean solid fill and transparency requires some specific customisation so here is a reproducible example for you using the built-in &lt;code&gt;trees&lt;/code&gt; dataset:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tree_graph &amp;lt;- ggplot(data = trees, 
       mapping = aes(x = Height, 
                     y = Girth)) + 
    geom_point(size = 0.5, colour = &amp;quot;#B8DE29FF&amp;quot;) + 
    geom_smooth(method = &amp;quot;lm&amp;quot;, se = FALSE, col = &amp;quot;#B8DE29FF&amp;quot;) + 
    geom_abline(intercept = 0, slope = 1, col = &amp;quot;white&amp;quot;, lwd = 0.5, lty = 2) + 
    theme_classic() +
    theme(plot.background = element_rect(fill = &amp;quot;transparent&amp;quot;, color = NA),
          panel.background = element_rect(fill = &amp;quot;transparent&amp;quot;),
          axis.text = element_text(colour = &amp;quot;#B8DE29FF&amp;quot;, size = 8),
          axis.title = element_text(colour = &amp;quot;#B8DE29FF&amp;quot;, size = 8),
          axis.line = element_line(colour = &amp;quot;#B8DE29FF&amp;quot;),
          axis.ticks = element_line(colour = &amp;quot;#B8DE29FF&amp;quot;))

ggsave(tree_graph, filename = &amp;quot;tree_graph.png&amp;quot;, bg = &amp;quot;transparent&amp;quot;, type = &amp;quot;cairo&amp;quot;, width = 10, height = 10, dpi = 300)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a couple of generally useful elements added on purpose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_smooth&lt;/code&gt; creates an automatically fitted linear model (defined using &lt;code&gt;method = &#34;lm&#34;&lt;/code&gt;). I have turned off plotting the standard errors (on by default) and manually set the colour.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_abline&lt;/code&gt; is your standard straight line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme&lt;/code&gt; is where the customisation begins:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;plot.background&lt;/code&gt; &amp;amp; &lt;code&gt;panel.background&lt;/code&gt; are set to transparent&lt;/li&gt;
&lt;li&gt;The various axis elements are set to the fill colour (a nice &lt;code&gt;viridis&lt;/code&gt; green) and desired text size&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggsave&lt;/code&gt; specifies that the background is transparent and to save it using the Cairo engine (&lt;code&gt;type = &#34;cairo&#34;&lt;/code&gt;). Cairo will create a vector based image so resizing the png isn’t an issue since the small font size is already defined.
&lt;ul&gt;
&lt;li&gt;You can also use &lt;code&gt;cairo-png&lt;/code&gt; but the graph height and width options appear to be ignored.&lt;/li&gt;
&lt;li&gt;If you don’t save it as a Cairo png, then the text will still have a white outline and won’t be a clean solid fill&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>IEA2021</title>
      <link>https://jacintak.github.io/talk/IEA2021/</link>
      <pubDate>Thu, 07 Jan 2021 09:00:00 +0000</pubDate>
      <guid>https://jacintak.github.io/talk/IEA2021/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
